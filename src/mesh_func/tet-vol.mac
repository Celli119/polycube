load(hj_fortran2)$
load(vect)$
load(f90)$
load("hj_flatten")$

optimprefix:tt$

cross3D(A,B) := matrix([ determinant(matrix([A[2,1],A[3,1]],[B[2,1],B[3,1]]))],
                       [-determinant(matrix([A[1,1],A[3,1]],[B[1,1],B[3,1]]))],
                       [ determinant(matrix([A[1,1],A[2,1]],[B[1,1],B[2,1]]))])$

f:openw("tet-vol.f90")$

block([tet],
tet : genmatrix(tet, 3, 4),
e1: col(tet,2) - col(tet,1),
e2: col(tet,3) - col(tet,1),
e3: col(tet,4) - col(tet,1),
n: cross3D(e1,e2),
calc_tet_vol(tet):=matrix([n.e3/6]),
with_stdout(f, val_jac_hes_to_f90(calc_tet_vol, [tet])),
return()
)$
close(f)$
